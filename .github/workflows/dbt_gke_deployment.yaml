name: Deploy Docker to GKE

on:
  push:
    branches:
      - master  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Create a JSON file
      run: |
        mkdir -p temp
        echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > temp/cred.json
      # Step 2: Authenticate with Google Cloud
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    # Step 3: Configure Docker for GCP
    - name: Configure Docker for GCP
      run: gcloud auth configure-docker

    # Step 4: Debug file paths (optional)
    - name: Debug Files
      run: ls -R

    # # Step 4: Build Docker image
    - name: Build Docker Image
      run: |
        docker build --build-arg GCP_SERVICE_ACCOUNT_KEY="temp/cred.json" -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/dbt_image:latest .

    # # Step 5: Push Docker image to Google Container Registry (GCR)
    - name: Push Docker Image to GCR
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/dbt_image:latest
    # - name: Install gke-gcloud-auth-plugin
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
    # - name: Authenticate to GKE
    #   run: |
    #     gcloud container clusters get-credentials bdm-project \
    #       --region 'asia-south1' \
    #       --project '${{ secrets.GCP_PROJECT_ID }}'
    #   env:
    #     USE_GKE_GCLOUD_AUTH_PLUGIN: "true"
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Step 6: Deploy to GKE
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/dbt_image:latest
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/ bdm-deployment
        kubectl get services -o wide
