name: Deploy Docker to GKE

on:
  push:
    branches:
      - master  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
      
    # Step 3: Authenticate with GKE
    - name: Authenticate to GKE
      run: |
        apt-get install -qq -y gettext
        echo  ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} > ${HOME}/gcloud-service-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
        gcloud --quiet config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud --quiet config set compute/zone asia-south1
        gcloud --quiet container clusters get-credentials bdm-project
        

    # Step 4: Build Docker image
    - name: Build Docker Image
      run: |
        docker build \
          --build-arg GCP_SERVICE_ACCOUNT_KEY="${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" \
          -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/dbt_image:latest .

    # Step 5: Push Docker image to Google Container Registry (GCR)
    - name: Push Docker Image to GCR
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/dbt_image:latest

    # Step 6: Deploy to GKE
    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/deployment.yaml  # Replace with your Kubernetes deployment file path
        kubectl apply -f k8s/service.yaml     # Replace with your Kubernetes service file path

    # Step 7: Verify deployment
    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/${{ secrets.K8S_DEPLOYMENT_NAME }}
